plugins {
    id 'com.github.ben-manes.versions' version '0.42.0'
    id 'com.gradle.plugin-publish' version '1.0.0'
    id 'java-gradle-plugin'
    id 'groovy'
    id 'maven-publish'
}

repositories {
    jcenter()
    google()

    // The gradle plugin portal, so that we can depend on other plugins.
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

apply from: 'gradle/dependencies.gradle'

sourceCompatibility = 1.8
targetCompatibility = 1.8

// This version can only be (and might need to be) updated with the Gradle Wrapper.
// After you run ./gradlew wrapper --gradle-version SOME_NEW_VERSION, you
// can (and possibly must) also update this to match the version of Groovy
// displayed when you run `./gradlew -v`.
def groovyVersion = "3.0.10"

dependencies {
    implementation "org.codehaus.groovy:groovy-all:${groovyVersion}"

    // The Lombok Gradle plugin, so that we can delombok sources if lombok would be applied.
    implementation 'io.freefair.gradle:lombok-plugin:5.3.3.3'

    testImplementation deps.android.tools.build.gradle
    testImplementation deps.spock
}

group 'org.checkerframework'
version '0.6.19'

gradlePlugin {
    plugins {
        checkerframeworkPlugin {
            id = 'org.checkerframework'
            displayName = 'Checker Framework Gradle Plugin'
            description = 'Re-usable build logic for extending the Java type system via the Checker Framework,' +
                    ' for Gradle builds'
            implementationClass = 'org.checkerframework.gradle.plugin.CheckerFrameworkPlugin'
        }
    }
}

pluginBundle {
    website = 'https://checkerframework.org'
    vcsUrl = 'https://github.com/kelloggm/checkerframework-gradle-plugin'
    tags = ['checkerframework', 'checker', 'typechecker', 'pluggable types', 'formal verification']
}

apply from: 'gradle/compile.gradle'

// Gradle 7+ requires a duplicates strategy whenever there might be duplication,
// even if the cause is some other plugin (which I think is the case for us).
// This setting (INCLUDE) was the default for Gradle 6 and earlier.
tasks.withType(Copy).all { duplicatesStrategy = DuplicatesStrategy.INCLUDE}
